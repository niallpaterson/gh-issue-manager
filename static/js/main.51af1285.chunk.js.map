{"version":3,"sources":["component/IssueCard/SideBar/SideBar.module.scss","component/SidePanel/RepoLabels/RepoLabels.module.scss","App.module.scss","container/IssuePanel/IssuePanel.module.scss","component/IssueCard/IssueCard.module.scss","component/IssueCard/MainContent/MainContent.module.scss","utilities/IssueNumber/IssueNumber.module.scss","utilities/Label/Label.module.scss","component/SidePanel/SidePanel.module.scss","component/SidePanel/Searchbar/Searchbar.module.scss","component/IssueCard/MainContent/index.js","component/IssueCard/MainContent/MainContent.jsx","utilities/IssueNumber/index.js","utilities/IssueNumber/IssueNumber.jsx","utilities/Label/colorContrast.mjs","utilities/Label/index.js","utilities/Label/Label.jsx","component/IssueCard/SideBar/index.js","component/IssueCard/SideBar/SideBar.jsx","component/IssueCard/index.js","component/IssueCard/IssueCard.jsx","container/IssuePanel/index.js","container/IssuePanel/IssuePanel.jsx","component/SidePanel/RepoLabels/index.js","component/SidePanel/RepoLabels/RepoLabels.jsx","component/SidePanel/Searchbar/index.js","component/SidePanel/Searchbar/Searchbar.jsx","component/SidePanel/index.js","component/SidePanel/SidePanel.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","MainContent","title","body","className","styles","IssueNumber","issueNumber","getContrast","color","chroma","contrast","Label","labelName","label","style","background","colorContrast","SideBar","number","labels","LabelContainer","map","index","key","name","IssueCard","IssuePanel","issues","issue","RepoLabels","repoLabels","LabelWrapper","i","Searchbar","fetchRepo","onKeyDown","e","target","value","placeholder","SidePanel","repo","App","useState","setRepo","setRepoLabels","setIssues","fetchError","setFetchError","cleanLabels","fetchIssues","searchTerm","fetch","then","response","json","data","catch","err","useEffect","fetchLabels","pageWrapper","repository","status","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.51af1285.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__3ONzh\",\"LabelContainer\":\"SideBar_LabelContainer__1UWH9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RepoLabels\":\"RepoLabels_RepoLabels__2Mp-z\",\"LabelWrapper\":\"RepoLabels_LabelWrapper__2GuKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"App_pageWrapper__1Jej4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issuePanel\":\"IssuePanel_issuePanel__3udtA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IssueCard\":\"IssueCard_IssueCard__1qrDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContent\":\"MainContent_MainContent__1Rnt5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"issueNumber\":\"IssueNumber_issueNumber__2T69T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__ZE9FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidePanel\":\"SidePanel_SidePanel__3GxDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1plLs\"};","import MainContent from \"./MainContent\";\n\nexport default MainContent;\n","import React from 'react';\nimport Markdown from 'markdown-to-jsx';\nimport PropTypes from 'prop-types';\nimport styles from './MainContent.module.scss';\n\nconst MainContent = ({ title, body }) => (\n  <div className={styles.MainContent}>\n  <h3>\n    {title}\n  </h3>\n  <Markdown>{body}</Markdown>\n  </div>\n);\n\nMainContent.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string,\n};\n\nexport default MainContent;\n","import IssueNumber from \"./IssueNumber\";\n\nexport default IssueNumber;\n","import React from \"react\";\nimport styles from \"./IssueNumber.module.scss\";\n\nconst IssueNumber = ({ issueNumber }) => <div className={styles.issueNumber}>{issueNumber}</div>\n\nexport default IssueNumber;\n","import chroma from 'chroma-js';\n\nconst getContrast = (color) => (chroma.contrast(color, '#FFFFFF') > 4.5 ? '#FFFFFF' : '#000000');\n\nexport default getContrast;\n","import Label from \"./Label\";\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Label.module.scss';\nimport colorContrast from './colorContrast.mjs';\n\nconst Label = ({ labelName, color }) => (\n  <div className={styles.label} style={{ background: `#${color}`, color: colorContrast(`#${color}`) }}>{labelName}</div>\n);\n\nLabel.propTypes = {\n  labelName: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","import SideBar from \"./SideBar\";\n\nexport default SideBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SideBar.module.scss';\nimport IssueNumber from '../../../utilities/IssueNumber';\nimport Label from '../../../utilities/Label';\n\nconst SideBar = ({ number, labels }) => (\n<aside className={styles.SideBar}>\n  <IssueNumber issueNumber={number} />\n  <div className={styles.LabelContainer}>\n    {labels.map((label, index) => <Label key={index} labelName={label.name} color={label.color}/>)}\n  </div>\n</aside>\n);\n\nSideBar.propTypes = {\n  number: PropTypes.string.isRequired,\n  labels: PropTypes.arrayOf(\n    PropTypes.shape({\n      index: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default SideBar;\n","import IssueCard from \"./IssueCard\";\n\nexport default IssueCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './IssueCard.module.scss';\nimport MainContent from './MainContent';\nimport SideBar from './SideBar';\n\nconst IssueCard = ({\n  title,\n  body,\n  number,\n  labels,\n}) => (\n    <article className={styles.IssueCard}>\n      <SideBar labels={labels} number={number} />\n      <MainContent title={title} body={body} />\n    </article>\n);\n\nIssueCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  body: PropTypes.string,\n  labels: PropTypes.array,\n};\n\nexport default IssueCard;\n","import IssuePanel from \"./IssuePanel\";\n\nexport default IssuePanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './IssuePanel.module.scss';\nimport IssueCard from '../../component/IssueCard';\n\nconst IssuePanel = ({ issues }) => (\n  <section className={styles.IssuePanel} >\n    {issues.map((issue, index) => (\n    <IssueCard\n      title={issue.title}\n      body={issue.body}\n      number={issue.number}\n      labels={issue.labels}\n      key={index}\n    />\n    ))}\n  </section>\n);\n\nIssuePanel.propTypes = {\n  issues: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      body: PropTypes.string,\n      number: PropTypes.string.isRequired,\n      labels: PropTypes.object,\n      key: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default IssuePanel;\n","import RepoLabels from './RepoLabels.jsx';\n\nexport default RepoLabels;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './RepoLabels.module.scss';\nimport Label from '../../../utilities/Label';\n\nconst RepoLabels = ({ repoLabels }) => (\n    <div className={styles.RepoLabels}>\n    <h3>Repo Labels</h3>\n    <div className={styles.LabelWrapper}>\n      {repoLabels.map((label, i) => <Label color={label.color} labelName={label.name} key={i} />)}\n    </div>\n    </div>\n);\n\nRepoLabels.propTypes = { repoLabels: PropTypes.array.isRequired };\n\nexport default RepoLabels;\n","import Searchbar from \"./Searchbar\";\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.scss';\n\nconst Searchbar = ({ fetchRepo }) => (\n  <input\n    onKeyDown={(e) => { if (e.key === 'Enter') fetchRepo(e.target.value); }}\n    className={styles.Searchbar}\n    placeholder={'Enter user/repo'}\n  />\n);\n\nSearchbar.propTypes = {\n  fetchRepo: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import SidePanel from './SidePanel.jsx';\n\nexport default SidePanel;\n","import React from 'react';\nimport styles from './SidePanel.module.scss';\nimport RepoLabels from './RepoLabels';\nimport SearchBar from './Searchbar';\n\nconst SidePanel = ({ repo, repoLabels, fetchRepo }) => {\n  return (\n    <section className={styles.SidePanel}>\n      <h1>Github Issue Manager</h1>\n      <SearchBar fetchRepo={fetchRepo}/>\n      <RepoLabels repoLabels={repoLabels}/>\n      {/* <img> */}\n    </section>\n  );\n};\n\nexport default SidePanel;\n","import React, { useState, useEffect } from 'react';\nimport styles from './App.module.scss';\nimport IssuePanel from './container/IssuePanel';\nimport SidePanel from './component/SidePanel';\n\nconst App = () => {\n  const [repo, setRepo] = useState(['niallpaterson/gh-issue-manager']);\n  const [repoLabels, setRepoLabels] = useState([]);\n  const [issues, setIssues] = useState([]);\n  const [fetchError, setFetchError] = useState(false);\n\n  const cleanLabels = (labels) => labels.map((label) => ({ name: label.name, color: label.color }));\n  const cleanIssues = (rawIssues) => rawIssues.map((issue) => (\n    {\n      title: issue.title,\n      number: issue.number,\n      labels: cleanLabels(issue.labels),\n      body: issue.body,\n    }\n  ));\n\n  const fetchIssues = (searchTerm) => {\n    fetch(`https://api.github.com/repos/${searchTerm}/issues`)\n      .then((response) => response.json())\n      .then((data) => setIssues(cleanIssues(data)))\n      .catch((err) => { if (err) throw err; });\n  };\n\n  const fetchLabels = (repo) => {\n    fetch(`https://api.github.com/repos/${repo}/labels`)\n      .then((response) => response.json())\n      .then((labels) => setRepoLabels(cleanLabels(labels)))\n      .catch((err) => { if (err) throw err; });\n  };\n\n  const fetchRepo = (repository) => {\n    fetch(`https://api.github.com/repos/${repository}/issues`)\n      .then((response) => {\n        if (response.status === 200) {\n          setRepo(repository);\n          setFetchError(false);\n        } else {\n          setFetchError(true);\n        }\n      })\n      .catch((err) => { if (err) throw err; });\n  };\n\n  useEffect(() => { if (!fetchError) { fetchIssues(repo); } }, [repo]);\n  useEffect(() => { if (!fetchError) { fetchLabels(repo); } }, [repo]);\n\n  const renderIssuePanel = () => (!fetchError ? <IssuePanel issues={issues} /> : <div></div>);\n  const renderHeader = () => (!fetchError ? `${repo}` : '404: Repo not found');\n\n  return (\n    <div className={styles.pageWrapper}>\n      <SidePanel fetchRepo={fetchRepo} repo={repo} repoLabels={repoLabels} />\n      <main>\n        <h2>{renderHeader()}</h2>\n        {renderIssuePanel()}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}